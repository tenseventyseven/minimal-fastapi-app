from datetime import datetime
from typing import Optional

from pydantic import BaseModel, ConfigDict, EmailStr, Field


class UserBase(BaseModel):
    """
    Base schema for user fields.

    Attributes:
        given_name (str): The user's given (first) name.
        family_name (str): The user's family (last) name.
        email (EmailStr): The user's email address.
    """

    given_name: Optional[str] = Field(
        None,
        description="The user's given (first) name.",
        examples=["Alice"],
    )
    family_name: Optional[str] = Field(
        None,
        description="The user's family (last) name.",
        examples=["Smith"],
    )
    email: Optional[EmailStr] = Field(
        None,
        description="The user's email address.",
        examples=["alice.smith@example.com"],
    )

    model_config = ConfigDict(
        from_attributes=True,
        str_strip_whitespace=True,
        extra="forbid",
        json_schema_extra={
            "example": {
                "given_name": "Alice",
                "family_name": "Smith",
                "email": "alice.smith@example.com",
            }
        },
    )


class UserCreate(BaseModel):
    """
    Schema for creating a new user.

    All fields are required. The user_id must be provided by the client.
    It is not generated by the backend. For example, this is needed for LDAP federation.
    """

    user_id: str = Field(
        min_length=1,
        max_length=64,
        description=(
            "The unique user identifier. Must be 1-64 characters. "
            "This value must be provided by the client. "
            "It is not generated by the backend."
        ),
        examples=["user-1234"],
    )
    given_name: str = Field(
        min_length=1,
        max_length=64,
        description="The user's given (first) name.",
        examples=["Alice"],
    )
    family_name: str = Field(
        min_length=1,
        max_length=64,
        description="The user's family (last) name.",
        examples=["Smith"],
    )
    email: EmailStr = Field(
        description="The user's email address.", examples=["alice.smith@example.com"]
    )

    model_config = ConfigDict(
        from_attributes=True,
        extra="forbid",
        json_schema_extra={
            "example": {
                "user_id": "user-1234",
                "given_name": "Alice",
                "family_name": "Smith",
                "email": "alice.smith@example.com",
            }
        },
    )


class UserUpdate(UserBase):
    """
    Schema for updating an existing user.

    All fields are optional for PATCH, but required for PUT (enforced in router).
    """

    model_config = ConfigDict(
        from_attributes=True,
        extra="ignore",  # Allow PATCH to ignore extra fields for partial updates
        json_schema_extra={
            "example": {
                "given_name": "Alice",
                "family_name": "Smith",
                "email": "alice.smith@example.com",
            }
        },
    )


class User(UserBase):
    """
    Schema for user response object.

    Attributes:
        user_id (str): The unique user identifier. Provided by the client.
            Not generated by the backend.
        created_at (datetime): The creation timestamp.
        updated_at (datetime): The last update timestamp.
    """

    user_id: str = Field(
        description=(
            "The unique user identifier. Provided by the client. "
            "Not generated by the backend."
        ),
        examples=["user_1234"],
    )
    created_at: datetime = Field(
        description="The creation timestamp.",
        examples=["2025-06-11T12:00:00"],
    )
    updated_at: datetime = Field(
        description="The last update timestamp.",
        examples=["2025-06-11T12:00:00"],
    )

    model_config = ConfigDict(
        from_attributes=True,
        extra="forbid",
        json_schema_extra={
            "example": {
                "user_id": "user_1234",
                "given_name": "Alice",
                "family_name": "Smith",
                "email": "alice.smith@example.com",
                "created_at": "2025-06-11T12:00:00",
                "updated_at": "2025-06-11T12:00:00",
            }
        },
    )
